<?php
  require_once 'pdf_contrato.php';
  
  class PDFHtml extends PDF
  {
    var $B = 0;
    var $I = 0;
    var $U = 0;
    var $HREF  = '';
    var $ALIGN = '';
    
    function WriteHTML($html)
    {
      //HTML parser
      $html = str_replace("\n", ' ', $html);
      $a    = preg_split('/<(.*)>/U', $html, -1, PREG_SPLIT_DELIM_CAPTURE);
      
      foreach($a as $i => $e)
      {
        if ($i % 2 == 0)
        {
          //Text
          if ($this->HREF)
            $this->PutLink($this->HREF, $e);
          elseif($this->ALIGN == 'center')
            $this->Cell(0, 5, $e, 0, 1, 'C');
          else
            $this->Write(5, $e);
        }
        else
        {
          //Tag
          if ($e[0] == '/')
            $this->CloseTag(strtoupper(substr($e, 1)));
          else
          {
            //Extract properties
            $a2   = explode(' ', $e);
            $tag  = strtoupper(array_shift($a2));
            $prop = array();
            
            foreach($a2 as $v)
            {
              if (preg_match('/([^=]*)=["\']?([^"\']*)/', $v, $a3))
                $prop[strtoupper($a3[1])] = $a3[2];
            }
            
            $this->OpenTag($tag, $prop);
          }
        }
      }
    }
    
    function OpenTag($tag, $prop)
    {
      //Opening tag
      if ($tag == 'B' || $tag == 'I' || $tag == 'U')
        $this->SetStyle($tag, true);
      
      if ($tag == 'A')
        $this->HREF = $prop['HREF'];
      
      if ($tag == 'BR')
        $this->Ln(5);
      
      if ($tag == 'P')
      {
        $this->ALIGN = $prop['ALIGN'];
        $this->Ln(5);
      }
      
      if ($tag == 'HR')
      {
        if (!empty($prop['WIDTH']))
          $Width = $prop['WIDTH'];
        else
          $Width = $this->w - $this->lMargin-$this->rMargin;
        
        $this->Ln(2);
        $x = $this->GetX();
        $y = $this->GetY();
        $this->SetLineWidth(0.4);
        $this->Line($x, $y, $x+$Width, $y);
        $this->SetLineWidth(0.2);
        $this->Ln(2);
      }
    }
    
    function CloseTag($tag)
    {
      //Closing tag
      if ($tag == 'B' || $tag == 'I' || $tag == 'U')
        $this->SetStyle($tag, false);
      
      if ($tag == 'A')
        $this->HREF = '';
      
      if ($tag == 'P')
        $this->ALIGN = '';
    }
    
    function SetStyle($tag, $enable)
    {
      //Modify style and select corresponding font
      $this->$tag += ($enable ? 1 : -1);
      $style = '';
      
      foreach (array('B', 'I', 'U') as $s)
        if ($this->$s > 0)
          $style.= $s;
      
      $this->SetFont('', $style);
    }
    
    function PutLink($URL,$txt)
    {
      //Put a hyperlink
      $this->SetTextColor(0, 0, 255);
      $this->SetStyle('U', true);
      $this->Write(5, $txt, $URL);
      $this->SetStyle('U', false);
      $this->SetTextColor(0);
    }
    
    function Write($h, $txt, $link='')
    {
      // Output text in flowing mode
      $cw = &$this->CurrentFont['cw'];
      $w = $this->w-$this->rMargin-$this->x;
      $wmax = ($w-2*$this->cMargin)*1000/$this->FontSize;
      $s = str_replace("\r",'',$txt);
      $nb = strlen($s);
      $sep = -1;
      $i = 0;
      $j = 0;
      $l = 0;
      $nl = 1;
      while($i<$nb)
      {
        // Get next character
        $c = $s[$i];
        if($c=="\n")
        {
          // Explicit line break
          $this->Cell($w,$h,substr($s,$j,$i-$j),0,2,'',0,$link);
          $i++;
          $sep = -1;
          $j = $i;
          $l = 0;
          if($nl==1)
          {
            $this->x = $this->lMargin;
            $w = $this->w-$this->rMargin-$this->x;
            $wmax = ($w-2*$this->cMargin)*1000/$this->FontSize;
          }
          $nl++;
          continue;
        }
        if($c==' ')
          $sep = $i;
        $l += $cw[$c];
        if($l>$wmax)
        {
          // Automatic line break
          if($sep==-1)
          {
            if($this->x>$this->lMargin)
            {
              // Move to next line
              $this->x = $this->lMargin;
              $this->y += $h;
              $w = $this->w-$this->rMargin-$this->x;
              $wmax = ($w-2*$this->cMargin)*1000/$this->FontSize;
              $i++;
              $nl++;
              continue;
            }
            if($i==$j)
              $i++;
            $this->Cell($w,$h,substr($s,$j,$i-$j),0,2,'',0,$link);
          }
          else
          {
            $this->Cell($w,$h,substr($s,$j,$sep-$j),0,2,'',0,$link);
            $i = $sep+1;
          }
          $sep = -1;
          $j = $i;
          $l = 0;
          if($nl==1)
          {
            $this->x = $this->lMargin;
            $w = $this->w-$this->rMargin-$this->x;
            $wmax = ($w-2*$this->cMargin)*1000/$this->FontSize;
          }
          $nl++;
        }
        else
          $i++;
      }
      // Last chunk
      if($i!=$j)
        $this->Cell($l/1000*$this->FontSize,$h,substr($s,$j),0,0,'',0,$link);
    }
    
  }